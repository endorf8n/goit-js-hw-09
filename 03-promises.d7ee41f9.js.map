{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXQQ,SAASC,cAAc,SAsC/BC,iBAAiB,UAvB9B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SACpD,IAAIC,EAAaL,EAAMM,cACnBC,EAAYN,EAAKK,cACjBE,EAAcN,EAAOI,cAEzB,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EAAG,CAIvCxB,EAHewB,EAAI,EACKJ,EAAaE,EAAYE,GAG9CC,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEhE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,G,CAGlEW,EAAMK,cAAcY,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formSubmitEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let firstDelay = delay.valueAsNumber;\n  let stepDelay = step.valueAsNumber;\n  let inputAmount = amount.valueAsNumber;\n\n  for (let i = 0; i < inputAmount; i += 1) {\n    let position = i + 1;\n    const increasingDelay = firstDelay + stepDelay * i;\n\n    createPromise(position, increasingDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  event.currentTarget.reset();\n}\n\nformSubmitEl.addEventListener('submit', onFormSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","firstDelay","valueAsNumber","stepDelay","inputAmount","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.d7ee41f9.js.map"}